name: Build and Deploy to Google Compute Engine

on:
  push:
    branches:
      - main
      
env:
  PROJECT_ID: ${{ secrets.GCE_PROJECT }}
  GCE_SA_KEY: ${{ secrets.GCE_SA_KEY }}
  GCE_INSTANCE: wbt-newzips-backend
  GCE_INSTANCE_ZONE: asia-northeast3-a


jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
#     - name: Checkout
#       uses: actions/checkout@v3
      
#     # Test code
#     - name: Set up JDK 17
#       uses: actions/setup-java@v3.10.0
#       with:
#         java-version: 17
#     - name: Cache Gradle
#       uses: actions/cache@v3.2.6
#       with:
#           path: |
#             ~/.gradle/caches
#             ~/.gradle/wrapper
#           key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#           restore-keys: ${{ runner.os }}-gradle-
          
#     - name: Grant execute permission for gradlew
#       run: chmod +x gradlew
        
    
    # Setup gcloud CLI
    - name: Set up Cloud SDK
#      uses: google-github-actions/setup-gcloud@v1
      uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_key: $GCE_SA_KEY
        project_id: $PROJECT_ID
      

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Build the Docker image
    - name: Build
      run: |-
        docker build --tag "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA" .
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"
    - name: Deploy
      run: |-
        gcloud compute instances update-container "$GCE_INSTANCE" \
          --zone "$GCE_INSTANCE_ZONE" \
          --container-image "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"
