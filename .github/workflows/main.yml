name: Build and Deploy to Google Compute Engine

on:
  push:
    branches:
      - main
      
env:
  PROJECT_ID: ${{ secrets.GCE_PROJECT }}
  GCE_INSTANCE: wbt-newzips-backend
  GCE_INSTANCE_ZONE: asia-northeast3-a
  DOCKER_NAMESPACE: choihj94
  DOCKER_REPOSITORY: wbt
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}


jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
#     # Test code
#     - name: Set up JDK 17
#       uses: actions/setup-java@v3.10.0
#       with:
#         java-version: 17
#     - name: Cache Gradle
#       uses: actions/cache@v3.2.6
#       with:
#           path: |
#             ~/.gradle/caches
#             ~/.gradle/wrapper
#           key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#           restore-keys: ${{ runner.os }}-gradle-
          
#     - name: Grant execute permission for gradlew
#       run: chmod +x gradlew
        
    
    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_key: ${{ secrets.GCE_SA_KEY }}
        project_id: ${{ secrets.GCE_PROJECT }}
        
    # Publish Docker Image
    - name: Log in to Docker Hub
      uses: docker/login-action@v2.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4.3.0
      with:
        images: choihj94/wbt
        
    - name: Build and Push Docker image
      uses: docker/build-push-action@v4.0.0
      with:
        context: .
        push: true
        tags: $GITHUB_SHA
        labels: $${{ steps.meta.outputs.labels }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Build the Docker image
#     - name: Build
#       run: |-
#         docker build --tag "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA" .
#     # Push the Docker image to Google Container Registry
#     - name: Publish
#       run: |-
#         docker push "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"
#     - name: Deploy
#       run: |-
#         gcloud compute instances update-container "$GCE_INSTANCE" \
#           --zone "$GCE_INSTANCE_ZONE" \
#           --container-image "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"
